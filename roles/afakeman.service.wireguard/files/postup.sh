#!/usr/bin/env bash

set -euxo pipefail

IFNAME=$1
NETWORK=$2

shift;
shift;

# 1) Preparing the directory which we'll persist the pf token
#    generated by (2) in. That token can then be used by our
#    postdown.sh script to remove the routing rule in the
#    event Wireguard is shut down on the server.
mkdir -p /usr/local/var/run/wireguard
chmod 700 /usr/local/var/run/wireguard

RULES="nat on en1 from $NETWORK to any -> (en1)"

# If there are more arguments than the first two, it means that
# MITM srcport:destport:proto tuples were passed. Proto defaults to tcp.
while [ "$#" -gt 0 ]; do
    PAIR=$1
    IFS=: read SRC DST PROTO <<< "$PAIR"
    RULES=$(printf "%s\n%s" "$RULES" "rdr pass proto ${PROTO:-tcp} from $NETWORK to any port $SRC -> 127.0.0.1 port $DST")
    shift;
done

echo "$RULES"

# 2) Dynamically add the NAT rule, enable the firewall, increase
#    its reference count (-E) and persist the reference token
#    generated by the command into pf_wireguard_token.txt,
#    which postdown.sh will reference when Wireguard is shut
#    down.
echo "$RULES" | \
    pfctl -a "com.apple/wireguard-$IFNAME" -Ef - 2>&1 | \
    grep 'Token' | \
    sed 's%Token : \(.*\)%\1%' > "/usr/local/var/run/wireguard/pf_wireguard_token_$IFNAME.txt"
